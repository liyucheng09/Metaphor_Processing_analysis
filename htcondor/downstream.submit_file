####################
#
# Example Job for HTCondor
#
####################

#---------------------------------------------
# Name your batch so it's easy to distinguish in the q.
JobBatchName = "Downstream for Hard Metaphor"

# --------------------------------------------

data_path = $ENV(HOME)/mpa/Hard/corpus/senseval3_$(task).tsv
output_path = /vol/research/nlg/mpa/hard

# Executable and its arguments
executable    = $ENV(HOME)/.conda/envs/lyc/bin/python
arguments     = $ENV(HOME)/mpa/Hard/downstream.py $(task) $(data_path) $(model_name) $(output_path)

# ---------------------------------------------------
# Universe (vanilla, docker)
universe         = docker
docker_image     = nvidia/cuda:10.2-cudnn7-runtime-ubuntu16.04

# -------------------------------------------------
# Event, out and error logs
log    = Downstream.c$(cluster).p$(process).$(task).log
output = Downstream.c$(cluster).p$(process).$(task).out
error  = Downstream.c$(cluster).p$(process).$(task).error

# -----------------------------------
# File Transfer, Input, Output
should_transfer_files = YES

# Make certain project spaces available in container
# environment = "mount=$ENV(HOME)"
# environment = "mount=$ENV(HOME),/vol/research/nlg,/vol/research/lyc_d"
environment = "mount=/vol/research/nlg,/vol/research/lyc_d,/vol/research/lyc"
# environment = "mount='/vol/research/nlg'"
# environment = "mount='/vol/research/lyc_d'"

# -------------------------------------
# Requirements for the Job (Requirements are explained in further detail in example09.submit_file)
# NOTE: HasStornext is not valid on orca.
requirements = (CUDAGlobalMemoryMb > 8000) && (CUDAGlobalMemoryMb <  25000) && \
#              (HasStornext) && \
			   (CUDACapability > 2.0) && (CUDACapability < 8.0)

# --------------------------------------
# Resources
request_GPUs     = 1
# this needs to be specified for the AI@Surrey cluster if requesting a GPU
+GPUMem          = 10000
request_CPUs     = 1
request_memory   = 8G

#This job will complete in less than 1 hour
+JobRunTime = 5

#This job can checkpoint
+CanCheckpoint = true

# -----------------------------------
# Queue commands
# queue 1 task_name in cola, sst2, mrpc, stsb, qqp, mnli, qnli, rte, wnli
queue 1 task, model_name from (
#   nli, /vol/research/nlg/mpa/glue/mrpc
#    qa, /vol/research/nlg/mpa/glue/boolq/
    qa_non, /vol/research/nlg/mpa/glue/boolq/
)
